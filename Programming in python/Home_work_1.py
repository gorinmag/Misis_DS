
# -------------Exercise 1
n = int(input())
Sum = (n * (n + 1)) / 2
print(f'Сумма первых положительных чисел равна {Sum}')

# ------------Exercise 2
x1 = int(input())
x2 = int(input())
print(f'Результат сложения {x1 + x2}')
print(f'Результат вычитания {x1 - x2}')
print(f'Результат умножения {x1 * x2}')
print(f'Результат деления {round(x1 / x2, 2)}')
print(f'Результат целочисленного деления {x1 // x2}')
print(f'Остаток от деления {x1 % x2}')
print(f'Результат возведения в степень {x1 ** x2}')
print(f'Результат логорифма по основания 10 {round(math.log10(x1),), round(math.log10(x2),2)}')
print(f'x1 < x2? {x1 < x2}')
print(f'x1 <= x2? {x1 <= x2}')
print(f'x1 > x2? {x1 > x2}')
print(f'x1 >= x2? {x1 >= x2}')
print(f'x1 != x2? {x1 != x2}')
print(f'x1 == x2? {x1 == x2}')

# ------------------Exercise 3
x = int(input())
y = int(input())
z = int(input())
f = (math.pow(((x ** 5 + 7) / (abs(-6) * y)), 1 / 3)) / (7 - z * (abs(y)))
print(f'Значение выражения {round(f, 3)}')

# -------------------Exercise 4
R1 = float(input())
R2 = float(input())
R = R1 + R2
print(f'Общее сопротивление {round(R,1)}')

# -------------------Exercise 5
a = int(input())
b = int(input())
m = int(input())
n = int(input())
x = -b / a
if m < x < n:
    print('Да')
else:
    print('Нет')

# -----------------Exercise 6
v = int(input())
t = int(input())
dist = (((v * t) / 123) - ((v * t) // 123)) * 123
print(f'Спортсмен остановился на {int(dist)} киллометре')
#-----------------Exercise 7
a = str(input())
b= str(input())
s=0
p=1
for i in range(len(a)):
  s+=int(a[i])
  p*=int(a[i])
print(s,p)
for i in range(len(b)-1):
  s+=int(a[i])
  p*=int(a[i])
print(s,p)
#----------------Exercise 8
a = [int(value) for value in input("Введите значения через пробел:").split()]
ls=[]
ls.append(min(a))
a.remove(min(a))
ls.append(max(a))
a.remove(max(a))
ls.insert(1,a[0])
print(ls)
#----------------Exercise 9
a = int(input('Введите первое число: '))
b = int(input('Введите второе число: '))
print(a, b)
a = a+b
b = a-b
a = a-b
print(a, b)
#----------------Exercise 10
team_name = input("Введите название команды:")
print(team_name, "-",'чемпион!')
print('-'*len(team_name))
print(team_name.lower())
if  'п' in team_name:
  print (True)
else:
  print(False)
t = 0
for i in team_name:
  if i == 'а':
    t +=1
print(t)
#----------------Exercise 11
country = input("Введите название государства:")
capital = input('Введите название столицы:')
print(f'Государство - {country}, столица - {capital}')
#----------------Exercise 12
word = 'Объектно-ориентированный'
print(word[:6])
print(word[9:17])
print(word[-10:-7])
#----------------Exercise 13
# Создать 2 пустых списка
a = []
b = []

# Добавить 2 вещественных числа (4.5 и 3.4) в список 'a' с помощью append
a.append(4.5)
a.append(3.4)
# Добавить 2 вещественных числа (8.7, 1.3) в список 'a' с помощью extend
temp = [8.7, 1.3]
a.extend(temp)

# Добавить 2 вещественных числа (14.5, 3.4) в список 'b' с помощью append
b.append(14.5)
b.append(3.4)
# Добавить 2 вещественных числа (8.7, 11.3) в список 'b'с помощью extend
temp = [8.7, 11.3]
a.extend(temp)

# Вставить целое число 100 на 2-е и 4-е место списка 'a'
a.insert(1,100)
a.insert(3,100)
# Вставить целое число 200 на 1-е и 3-е место списка 'b'
b.insert(0,200)
b.insert(2,200)

# Вывести списки на экран
print("Исходные списки:")
print(a)
print(b)

# Удалить первые элементы из списков 'a' и 'b'
del a[0]
del b[0]
# Удалить элемент 100 из списка 'a'
a.remove(100)
# Удалить элемент 200 из списка 'b'
b.remove(200)

# Вывести списки на экран
print("\nПосле удалений:")
print(a)
print(b)
# Создать множества из списков 'a' и 'b', а также их пересечение
sa = set(a)
sb = set(b)
sa_and_sb = list(sa)+list(sb)
# Вывести экран уникальные элементы каждого списка и общие
print("\nУникальные элементы:")
print(set(sa_and_sb))
print("общие:", sa_and_sb)
# Соединить списки 'a' и 'b'
c = a+b
# Отсортировать список 'c' по возрастанию и убыванию
c_asc = sorted(c)
c_desc = sorted(c,reverse=True)

# Среднее арифметическое элементов списка 'c', расположенных на четных местах
sr_ar = sum(c[1::2])/len(c[1::2])
# Среднее геометрическое элементов списка 'c', расположенных на нечетных местах
t = 1
for i in c[::2]:
  t*=i
sr_geom = t**(1/len(c[::2]))
# Максимальный и минимальный элементы
c_max = max(c)
c_min = min(c)
# Вывести результаты на экран
print("\nИтоговые:")
print("3-й:", c)
# Удалите комментарий и допишите код
print('Сортировка (возр.):', c_asc)
print('Сортировка (убыв.):', c_desc)
print(f'Ср. арифм. = {sr_ar}, ср. геометр. = {sr_geom}')
print('Макс. и мин.:', c_max, c_min)
#
# # Пример вывода:
# #
# # Исходные списки:
# # 1-й: [4.5, 100, 3.4, 100, 8.7, 1.3]
# # 2-й: [200, 14.5, 200, 3.4, 8.7, 11.3]
# #
# # После удалений:
# # 1-й: [3.4, 100, 8.7, 1.3]
# # 2-й: [14.5, 3.4, 8.7, 11.3]
# #
# # Уникальные элементы:
# # 1-й: {8.7, 1.3, 3.4, 100}
# # 2-й: {8.7, 11.3, 3.4, 14.5}
# # общие: {8.7, 3.4}
#
# # Итоговые:
# # 3-й: [3.4, 100, 8.7, 1.3, 14.5, 3.4, 8.7, 11.3]
# # Сортировка (возр.): [1.3, 3.4, 3.4, 8.7, 8.7, 11.3, 14.5, 100]
# # Сортировка (убыв.): [100, 14.5, 11.3, 8.7, 8.7, 3.4, 3.4, 1.3]
# # Ср. арифм. = 29.00, ср. геометр. = 7.82
# # Макс. и мин.: 100 1.3


#----------------Exercise 14

# В данной задаче все значения задаются в коде (без input())

# 1. Создание словаря
# Создать пустой словарь
info = {}

# Добавить значения для ключей "фио", "дата_рождения", "место_рождения"
info["фио"] = 'Горобец Иван Николаевич'
info["дата_рождения"] = '20.01.1994'
info["место_рождения"] = 'Магадан'

# Напечатать словарь
print(info)

# Создать ключ "хобби" со значением = список из строк -
# наименований хобби (например "плавание" и т.д.)
info["хобби"] = ['лыжи', 'сноуборд', 'барабаны']
#
# Добавить "программирование" в список хобби
info["хобби"].append('программирование')

# Создать ключ "животные" со значением = кортеж из строк -
# имен домашних животных (например "кошка Мурка" и т.д.)
info["Животные"] = ('кошка Мурка', 'собака Шарик')

# Создать ключ "ЕГЭ" и поместить в него пустой словарь
info["ЕГЭ"] = {}

# В словарь info["ЕГЭ"] добавить информацию о сданных экзаменах,
# где ключ - наименование предмета, а значение - количество баллов

info["ЕГЭ"]["Математика"] = 73
info["ЕГЭ"]["Информатика"] = 77
info["ЕГЭ"]["Химия"] = 67
info["ЕГЭ"]["Физика"] = 85


# Добавить экзамен, который не был сдан, после чего удалить его
info["ЕГЭ"]["Русский язык"] = None

del info["ЕГЭ"]["Русский язык"]

# Создать ключ "вузы" и поместить в него пустой словарь
info["вузы"] = {}
# В словарь info["вузы"] добавить информацию о вузах,
# где ключ - аббревиатура вуза, а значение -
# количество баллов для специальности, на которую хотели поступить
info["вузы"]["СПБГУ"] = 250
info["вузы"]["МГУ"] = 300
info["вузы"]["МФТИ"] = 400

# 2. Вывод на экран
# print("Данные:")
# Получившийся словарь
print("Данные:", info)
# Список экзаменов ЕГЭ в алфавитном порядке
# (используйте метод ``keys()``, преобразовав результат в кортеж)
exams = sorted(info["ЕГЭ"].keys())

print("Предметы:", exams)
# Список вузов в алфавитном порядке
uni = sorted(info["вузы"].keys())
print("Вузы:", uni)

# # 3. Ответы на вопросы
print("\nОтветы на вопросы:")
# Выделить имя из info["фио"]
name = info["фио"].split()[1]
print(name)
# Начинается на гласную? (True/False)
starts_with_vowel = True if name[0].lower() in ('а', "о", "у", "и", "э", "я", "ю", "е", "ё") else False
print("* мое имя начинается на гласную букву:", starts_with_vowel)
#
# Выделить месяц из info["дата_рождения"]
month = info["дата_рождения"].split(".")
# #Родился зимой или летом? (True/False)
born_in_winter_or_summer = True if int(month[1]) < 6 else False
print("* родился летом или зимой:", born_in_winter_or_summer)

# Количество хобби и первое из них
hobbies_count = len(info["хобби"])
print(hobbies_count)
print("* у меня {} хобби, первое \"{}\"".format(hobbies_count, info["хобби"][0]))
#
# Количество сданных экзаменов
print("* после окончания школы сдавал {} экз.".format(len(info["ЕГЭ"])))
#
# Сумма баллов по экзаменам
sum_mark = sum(info["ЕГЭ"].values())
print("* сумма баллов = {}".format(sum_mark))

# Максимальный балл среди сданных
max_mark = max(info["ЕГЭ"].values())
print("* макс. балл = {}".format(max_mark))
# Количество вузов, в которые Вы проходите по баллам
# Подсказка: определить, проходите Вы или нет, можно простым сравнением
# суммы баллов с проходным баллом вуза - ``True/False``.
# Для того, чтобы определить количество таких вузов, преобразуйте
# сравнение в целое число (используя ``int()``) и сложите все сравниваемые вузы.
vuz_count = len([i for i in (info["вузы"].values()) if i < sum_mark])
print("* кол-во вузов в которые прохожу: {}".format(vuz_count))